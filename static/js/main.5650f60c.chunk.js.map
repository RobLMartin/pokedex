{"version":3,"sources":["app/common/canvas/index.js","app/ducks/pokemon.js","pokemon.list/index.js","catch/index.js","app/ducks/index.js","app/store.js","app/index.js","serviceWorker.js","index.js"],"names":["Canvas","styled","div","GET_POKEMON","DESELECT_WILD","SELECT_ADOPTED","GET_MY_POKEMON","CATCH_POKEMON","IS_LOADING","HAS_ERRORED","INITIAL_STATE","my_pokemon","wild_pokemon","selected_wild","selected_adopted","error","is_loading","fetch_pokemon_by_id","url","dispatch","type","payload","fetch","then","res","json","pokemon","catch","err","mapDispatchToProps","fetch_my_pokemon","retrieved_data","localStorage","getItem","JSON","parse","select_adopted","selected_pokemon","connect","state","selected","history","useEffect","handle_get_default_selected","default_selected","map","key","id","onClick","name","Button","variant","color","push","fetch_wild_pokemon","offset","Math","floor","random","data","results","deselect_wild","catch_pokemon","update_my_pokemon","store_data","stringify","setItem","clear_wild_pokemon","combineReducers","middleware","thunk","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","App","store","exact","path","component","PokemonList","Catch","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5650f60c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Canvas = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n`;\r\n\r\nexport { Canvas };\r\n","export const GET_POKEMON = \"pokedex/pokemon/GET_POKEMON\";\r\nexport const GET_POKEMON_BY_ID = \"pokedex/pokemon/GET_POKEMON_BY_ID\";\r\nexport const DESELECT_WILD = \"pokedex/pokemon/DESELECT_POKEMON\";\r\nexport const SELECT_ADOPTED = \"pokedex/pokemon/SELECT_ADOPTED\";\r\nexport const CLEAR_WILD_POKEMON = \"pokedex/pokemon/CLEAR_WILD_POKEMON\";\r\nexport const GET_MY_POKEMON = \"pokedex/pokemon/GET_MY_POKEMON\";\r\nexport const CATCH_POKEMON = \"pokedex/pokemon/CATCH_POKEMON\";\r\nexport const IS_LOADING = \"pokedex/pokemon/IS_LOADING\";\r\nexport const HAS_ERRORED = \"pokedex/pokemon/HAS_ERRORED\";\r\n\r\nconst INITIAL_STATE = {\r\n  my_pokemon: [],\r\n  wild_pokemon: [],\r\n  selected_wild: null,\r\n  selected_adopted: null,\r\n  error: null,\r\n  is_loading: false,\r\n};\r\n\r\nexport default function pokemon(state = INITIAL_STATE, { type, payload }) {\r\n  switch (type) {\r\n    case GET_POKEMON:\r\n      return { ...state, wild_pokemon: payload };\r\n    case GET_MY_POKEMON:\r\n      return { ...state, my_pokemon: payload };\r\n    case GET_POKEMON_BY_ID:\r\n      return { ...state, selected_wild: payload };\r\n    case DESELECT_WILD:\r\n      return { ...state, selected_wild: null };\r\n    case SELECT_ADOPTED:\r\n      return { ...state, selected_adopted: payload };\r\n    case CLEAR_WILD_POKEMON:\r\n      return { ...state, wild_pokemon: null };\r\n    case CATCH_POKEMON:\r\n      return { ...state, my_pokemon: [payload, ...state.my_pokemon] };\r\n    case IS_LOADING:\r\n      return { ...state, is_loading: payload };\r\n    case HAS_ERRORED:\r\n      return { ...state, error: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetch_wild_pokemon = () => (dispatch) => {\r\n  const offset = Math.floor(Math.random() * 1040);\r\n  const limit = 10;\r\n  const url = `https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`;\r\n\r\n  dispatch({ type: IS_LOADING, payload: true });\r\n\r\n  fetch(url)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      dispatch({ type: IS_LOADING, payload: false });\r\n      dispatch({ type: GET_POKEMON, payload: data.results });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: IS_LOADING, payload: false });\r\n      dispatch({ type: HAS_ERRORED });\r\n    });\r\n};\r\n\r\nexport const fetch_my_pokemon = () => (dispatch) => {\r\n  dispatch({ type: IS_LOADING, payload: true });\r\n\r\n  let my_pokemon = [];\r\n  const retrieved_data = localStorage.getItem(\"my_pokemon\");\r\n  if (typeof retrieved_data === \"string\") {\r\n    my_pokemon = JSON.parse(retrieved_data);\r\n  }\r\n\r\n  dispatch({ type: IS_LOADING, payload: false });\r\n  dispatch({ type: GET_MY_POKEMON, payload: my_pokemon });\r\n};\r\n\r\nexport const fetch_pokemon_by_id = (url) => (dispatch) => {\r\n  dispatch({ type: IS_LOADING, payload: true });\r\n  fetch(url)\r\n    .then((res) => res.json())\r\n    .then((pokemon) => {\r\n      dispatch({ type: IS_LOADING, payload: false });\r\n      dispatch({ type: GET_POKEMON_BY_ID, payload: pokemon });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: IS_LOADING, payload: false });\r\n      dispatch({ type: HAS_ERRORED, payload: err });\r\n    });\r\n};\r\n\r\nexport const deselect_wild = () => (dispatch) => {\r\n  dispatch({ type: DESELECT_WILD });\r\n};\r\n\r\nexport const select_adopted = (selected_pokemon) => (dispatch) => {\r\n  dispatch({ type: SELECT_ADOPTED, payload: selected_pokemon });\r\n\r\n  if (typeof select_adopted === \"object\") {\r\n    localStorage.setItem(\"selected_adopted\", JSON.stringify(selected_pokemon));\r\n  }\r\n};\r\nexport const clear_wild_pokemon = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_WILD_POKEMON });\r\n};\r\n\r\nexport const catch_pokemon = (pokemon) => (dispatch) => {\r\n  dispatch({ type: IS_LOADING, payload: true });\r\n  dispatch({ type: CATCH_POKEMON, payload: pokemon });\r\n\r\n  let my_pokemon = [];\r\n  const retrieved_data = localStorage.getItem(\"my_pokemon\");\r\n  if (typeof retrieved_data === \"string\") {\r\n    my_pokemon = JSON.parse(retrieved_data);\r\n  }\r\n\r\n  const update_my_pokemon = [pokemon, ...my_pokemon];\r\n  const store_data = JSON.stringify(update_my_pokemon);\r\n\r\n  localStorage.setItem(\"my_pokemon\", store_data);\r\n  dispatch({ type: DESELECT_WILD });\r\n  dispatch({ type: IS_LOADING, payload: false });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetch_my_pokemon,\r\n  fetch_pokemon_by_id,\r\n  select_adopted,\r\n} from \"../app/ducks/pokemon\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst PokemonList = ({\r\n  history,\r\n  fetch_my_pokemon,\r\n  my_pokemon,\r\n  select_adopted,\r\n  fetch_pokemon_by_id,\r\n  selected,\r\n}) => {\r\n  useEffect(() => {\r\n    fetch_my_pokemon();\r\n    handle_get_default_selected();\r\n    return;\r\n  }, []);\r\n\r\n  const handle_get_default_selected = () => {\r\n    const default_selected = localStorage.getItem(\"selected_adopted\");\r\n\r\n    if (typeof default_selected === \"string\")\r\n      select_adopted(JSON.parse(default_selected));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {my_pokemon.map((pokemon) => (\r\n        <p key={pokemon.id} onClick={() => select_adopted(pokemon)}>\r\n          {pokemon.name}\r\n        </p>\r\n      ))}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => history.push(\"/pokedex/catch\")}\r\n      >\r\n        Catch a Pokemon\r\n      </Button>\r\n      <p>{selected?.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    my_pokemon: state.pokemon.my_pokemon,\r\n    selected: state.pokemon.selected_adopted,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetch_my_pokemon,\r\n  fetch_pokemon_by_id,\r\n  select_adopted,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonList);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetch_wild_pokemon,\r\n  fetch_pokemon_by_id,\r\n  deselect_wild,\r\n  catch_pokemon,\r\n  clear_wild_pokemon,\r\n} from \"../app/ducks/pokemon\";\r\n\r\nconst Catch = ({\r\n  fetch_wild_pokemon,\r\n  wild_pokemon,\r\n  fetch_pokemon_by_id,\r\n  deselect_wild,\r\n  catch_pokemon,\r\n  clear_wild_pokemon,\r\n  selected,\r\n}) => {\r\n  useEffect(() => {\r\n    fetch_wild_pokemon();\r\n\r\n    return () => {\r\n      deselect_wild();\r\n      clear_wild_pokemon();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {wild_pokemon.map((pokemon) => (\r\n        <p key={pokemon.url} onClick={() => fetch_pokemon_by_id(pokemon.url)}>\r\n          {pokemon.name}\r\n        </p>\r\n      ))}\r\n      <hr />\r\n      <p\r\n        // onClick={() => deselect_wild()}\r\n        onClick={() => catch_pokemon(selected)}\r\n      >\r\n        {selected?.name}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wild_pokemon: state.pokemon.wild_pokemon,\r\n    selected: state.pokemon.selected_wild,\r\n    is_loading: state.pokemon.is_loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetch_wild_pokemon,\r\n  fetch_pokemon_by_id,\r\n  deselect_wild,\r\n  catch_pokemon,\r\n  clear_wild_pokemon,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Catch);\r\n","import { combineReducers } from \"redux\";\r\nimport pokemon from \"./pokemon\";\r\n\r\nexport default combineReducers({ pokemon });\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./ducks\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  initialState,\r\n  window.window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      )\r\n    : compose(applyMiddleware(...middleware))\r\n);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Canvas } from \"./common\";\r\nimport PokemonList from \"../pokemon.list\";\r\nimport Catch from \"../catch\";\r\n\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Canvas>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/pokedex\" component={PokemonList} />\r\n            <Route path=\"/pokedex/catch\" component={Catch} />\r\n          </Switch>\r\n        </Router>\r\n      </Canvas>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}